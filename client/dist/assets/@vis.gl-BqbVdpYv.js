import{a as v,r as i}from"./react-DSroWhVQ.js";import{r as N}from"./react-dom-CkgdwS5A.js";function L(){return L=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},L.apply(this,arguments)}function E(e,n){if(e==null)return{};var t={},r=Object.keys(e),a,o;for(o=0;o<r.length;o++)a=r[o],!(n.indexOf(a)>=0)&&(t[a]=e[a]);return t}function z(e,n){if(typeof e!="object"||e===null)return e;var t=e[Symbol.toPrimitive];if(t!==void 0){var r=t.call(e,n);if(typeof r!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}function T(e){var n=z(e,"string");return typeof n=="symbol"?n:String(n)}const y={NOT_LOADED:"NOT_LOADED",LOADING:"LOADING",LOADED:"LOADED",FAILED:"FAILED",AUTH_FAILURE:"AUTH_FAILURE"},F="https://maps.googleapis.com/maps/api/js";class M{static async load(n,t){var r;const a=n.libraries?n.libraries.split(","):[],o=this.serializeParams(n);(r=window.google)!=null&&(r=r.maps)!=null&&r.importLibrary?(this.serializedApiParams||(this.loadingStatus=y.LOADED),t(this.loadingStatus)):(this.serializedApiParams=o,this.initImportLibrary(n,t)),this.serializedApiParams&&this.serializedApiParams!==o&&console.warn("The maps API has already been loaded with different parameters and will not be loaded again. Refresh the page for new values to have effect.");for(const s of["maps",...a])await google.maps.importLibrary(s)}static serializeParams(n){return[n.v,n.key,n.language,n.region,n.authReferrerPolicy,n.solutionChannel].join("/")}static initImportLibrary(n,t){if(window.google||(window.google={}),window.google.maps||(window.google.maps={}),window.google.maps.importLibrary){console.warn("initImportLibrary can only be called once.",n);return}let r=null;const a=o=>r||(r=new Promise((s,l)=>{var d;const c=document.createElement("script"),u=new URLSearchParams;for(const[m,p]of Object.entries(n)){const g=m.replace(/[A-Z]/g,f=>"_"+f[0].toLowerCase());u.set(g,p)}u.set("libraries",o),u.set("loading","async"),u.set("callback","__googleMapsCallback__"),c.async=!0,c.src=F+"?"+u.toString(),window.__googleMapsCallback__=()=>{this.loadingStatus=y.LOADED,t(this.loadingStatus),s()},window.gm_authFailure=()=>{this.loadingStatus=y.AUTH_FAILURE,t(this.loadingStatus)},c.onerror=()=>{this.loadingStatus=y.FAILED,t(this.loadingStatus),l(new Error("The Google Maps JavaScript API could not load."))},c.nonce=((d=document.querySelector("script[nonce]"))==null?void 0:d.nonce)||"",this.loadingStatus=y.LOADING,t(this.loadingStatus),document.head.append(c)}),r);google.maps.importLibrary=o=>a(o).then(()=>google.maps.importLibrary(o))}}M.loadingStatus=y.NOT_LOADED;M.serializedApiParams=void 0;const j=["onLoad","apiKey","version","libraries"],U=["children"],I=v.createContext(null);function B(){const[e,n]=i.useState({});return{mapInstances:e,addMapInstance:(o,s="default")=>{n(l=>L({},l,{[s]:o}))},removeMapInstance:(o="default")=>{n(s=>E(s,[o].map(T)))},clearMapInstances:()=>{n({})}}}function G(e){const{onLoad:n,apiKey:t,version:r,libraries:a=[]}=e,o=E(e,j),[s,l]=i.useState(M.loadingStatus),[d,c]=i.useReducer((g,f)=>L({},g,{[f.name]:f.value}),{}),u=i.useMemo(()=>a==null?void 0:a.join(","),[a]),m=i.useMemo(()=>JSON.stringify(L({apiKey:t,version:r},o)),[t,r,o]),p=i.useCallback(async g=>{var f;if(d[g])return d[g];if(!((f=google)!=null&&(f=f.maps)!=null&&f.importLibrary))throw new Error("[api-provider-internal] importLibrary was called before google.maps.importLibrary was defined.");const h=await window.google.maps.importLibrary(g);return c({name:g,value:h}),h},[d]);return i.useEffect(()=>{(async()=>{try{const g=L({key:t},o);r&&(g.v=r),(u==null?void 0:u.length)>0&&(g.libraries=u),await M.load(g,f=>l(f));for(const f of["core","maps",...a])await p(f);n&&n()}catch(g){console.error("<ApiProvider> failed to load Google Maps API",g)}})()},[t,u,m]),{status:s,loadedLibraries:d,importLibrary:p}}const ge=e=>{const{children:n}=e,t=E(e,U),{mapInstances:r,addMapInstance:a,removeMapInstance:o,clearMapInstances:s}=B(),{status:l,loadedLibraries:d,importLibrary:c}=G(t);return v.createElement(I.Provider,{value:{mapInstances:r,addMapInstance:a,removeMapInstance:o,clearMapInstances:s,status:l,loadedLibraries:d,importLibrary:c}},n)};function O(){var e;return((e=i.useContext(I))==null?void 0:e.status)||y.NOT_LOADED}function x(){return O()===y.LOADED}const D=new Set;function R(...e){const n=JSON.stringify(e);D.has(n)||(D.add(n),console.error(...e))}function H(){const[e,n]=i.useState(null),t=i.useCallback(r=>n(r),[n]);return[e,t]}function J(){return i.useRef({center:{lat:0,lng:0},heading:0,tilt:0,zoom:0})}function $(e,n){const t=e;if(!t.detail.center)return;const{center:r,zoom:a,heading:o,tilt:s}=t.detail;n.current.center=r,n.current.heading=o,n.current.tilt=s,n.current.zoom=a}function K(e,n,t){for(const r of W){const a=t[r],o=S[r];i.useEffect(()=>{if(!e||!a)return;const s=google.maps.event.addListener(e,o,l=>{const d=Z(o,e,l);$(d,n),a(d)});return()=>s.remove()},[e,n,o,a])}}function Z(e,n,t){const r={type:e,map:n,detail:{},stoppable:!1,stop:()=>{}};if(q.includes(e)){const o=r,s=n.getCenter(),l=n.getZoom(),d=n.getHeading()||0,c=n.getTilt()||0,u=n.getBounds();return(!s||!u||!Number.isFinite(l))&&console.warn("[createEvent] at least one of the values from the map returned undefined. This is not expected to happen. Please report an issue at https://github.com/visgl/react-google-maps/issues/new"),o.detail={center:(s==null?void 0:s.toJSON())||{lat:0,lng:0},zoom:l,heading:d,tilt:c,bounds:(u==null?void 0:u.toJSON())||{north:90,east:180,south:-90,west:-180}},o}else if(V.includes(e)){var a;if(!t)throw new Error("[createEvent] mouse events must provide a srcEvent");const o=r;return o.domEvent=t.domEvent,o.stoppable=!0,o.stop=()=>t.stop(),o.detail={latLng:((a=t.latLng)==null?void 0:a.toJSON())||null,placeId:t.placeId},o}return r}const S={onBoundsChanged:"bounds_changed",onCenterChanged:"center_changed",onClick:"click",onContextmenu:"contextmenu",onDblclick:"dblclick",onDrag:"drag",onDragend:"dragend",onDragstart:"dragstart",onHeadingChanged:"heading_changed",onIdle:"idle",onIsFractionalZoomEnabledChanged:"isfractionalzoomenabled_changed",onMapCapabilitiesChanged:"mapcapabilities_changed",onMapTypeIdChanged:"maptypeid_changed",onMousemove:"mousemove",onMouseout:"mouseout",onMouseover:"mouseover",onProjectionChanged:"projection_changed",onRenderingTypeChanged:"renderingtype_changed",onTilesLoaded:"tilesloaded",onTiltChanged:"tilt_changed",onZoomChanged:"zoom_changed"},q=["bounds_changed","center_changed","heading_changed","projection_changed","tilt_changed","zoom_changed"],V=["click","contextmenu","dblclick","mousemove","mouseout","mouseover"],W=Object.keys(S);function Y(e){return!e||typeof e!="object"||!("lat"in e&&"lng"in e)?!1:Number.isFinite(e.lat)&&Number.isFinite(e.lng)}const Q=["center","zoom","heading","tilt"],X=["mapId"];function ee(e,n,t){const{center:r,zoom:a,heading:o,tilt:s}=t,l=E(t,Q),d=r?Y(r)?r:r.toJSON():null,c=d&&d.lat,u=d&&d.lng;i.useEffect(()=>{if(!e)return;const m=E(l,X);e.setOptions(m)},[l]),i.useLayoutEffect(()=>{!e||!Number.isFinite(c)||!Number.isFinite(u)||n.current.center.lat===c&&n.current.center.lng===u||e.moveCamera({center:{lat:c,lng:u}})},[c,u]),i.useLayoutEffect(()=>{!e||!Number.isFinite(a)||n.current.zoom!==a&&e.moveCamera({zoom:a})},[a]),i.useLayoutEffect(()=>{!e||!Number.isFinite(o)||n.current.heading!==o&&e.moveCamera({heading:o})},[o]),i.useLayoutEffect(()=>{!e||!Number.isFinite(s)||n.current.tilt!==s&&e.moveCamera({tilt:s})},[s])}function te(e,n){i.useLayoutEffect(()=>{if(!e||!n)return;e.setOptions({gestureHandling:"none",keyboardShortcuts:!1,disableDefaultUI:!0});const{latitude:t,longitude:r,bearing:a,pitch:o,zoom:s}=n;e.moveCamera({center:{lat:t,lng:r},heading:a,tilt:o,zoom:s+1})},[e,n])}const ne=["id","initialBounds"],k=v.createContext(null),re=e=>{const{children:n,id:t,className:r,style:a,viewState:o,viewport:s}=e,l=i.useContext(I),d=O();if(!l)throw new Error("<Map> can only be used inside an <ApiProvider> component.");const[c,u]=ae(e,l),m=J();ee(c,m,e),K(c,m,e),te(c,o);const p=i.useMemo(()=>!!s,[s]),g=i.useMemo(()=>L({width:"100%",height:"100%",zIndex:p?-1:0},a),[a,p]);return d===y.AUTH_FAILURE?v.createElement("div",{style:L({position:"relative"},r?{}:g),className:r},v.createElement(oe,null)):v.createElement("div",L({ref:u,"data-testid":"map",style:r?void 0:g,className:r},t?{id:t}:{}),c?v.createElement(k.Provider,{value:{map:c}},n):null)};re.deckGLViewProps=!0;const oe=()=>{const e={position:"absolute",top:0,left:0,bottom:0,right:0,zIndex:999,display:"flex",flexFlow:"column nowrap",textAlign:"center",justifyContent:"center",fontSize:".8rem",color:"rgba(0,0,0,0.6)",background:"#dddddd",padding:"1rem 1.5rem"};return v.createElement("div",{style:e},v.createElement("h2",null,"Error: AuthFailure"),v.createElement("p",null,"A problem with your API key prevents the map from rendering correctly. Please make sure the value of the ",v.createElement("code",null,"APIProvider.apiKey")," prop is correct. Check the error-message in the console for further details."))};function ae(e,n){const t=x(),[r,a]=i.useState(null),[o,s]=H(),{id:l,initialBounds:d}=e,c=E(e,ne);return i.useEffect(()=>{if(!o||!t)return;const{addMapInstance:u,removeMapInstance:m}=n,p=new google.maps.Map(o,c);return a(p),u(p,l),d&&p.fitBounds(d),()=>{!o||!t||(google.maps.event.clearInstanceListeners(p),a(null),m(l))}},[l,o,t,e.mapId]),i.useEffect(()=>{if(!l)return;const{mapInstances:u}=n;u[l]&&u[l]!==r&&R(`The map id '${l}' seems to have been used multiple times. This can lead to unexpected problems when accessing the maps. Please use unique ids for all <Map> components.`)},[l,n,r]),[r,s]}function ie(e){const n=x(),t=i.useContext(I);return i.useEffect(()=>{!n||!t||t.importLibrary(e)},[n,t,e]),(t==null?void 0:t.loadedLibraries[e])||null}const se=v.createContext(null);function le(e){var n;const[t,r]=i.useState(null),[a,o]=i.useState(null),s=(n=i.useContext(k))==null?void 0:n.map,l=ie("marker"),{children:d,className:c,onClick:u,onDrag:m,onDragStart:p,onDragEnd:g,collisionBehavior:f,draggable:h,position:A,title:_,zIndex:C}=e,P=i.Children.count(d);return i.useEffect(()=>{if(!s||!l)return;const b=new l.AdvancedMarkerElement;if(b.map=s,r(b),P>0){const w=document.createElement("div");c&&(w.className=c),b.content=w,o(w)}return()=>{b.map=null,r(null),o(null)}},[s,l,P]),i.useEffect(()=>{a&&(a.className=c??"")},[a,c]),i.useEffect(()=>{if(!t)return;const b=google.maps.event;u&&b.addListener(t,"click",u),m&&b.addListener(t,"drag",m),p&&b.addListener(t,"dragstart",p),g&&b.addListener(t,"dragend",g),(m||p||g)&&!h&&console.warn("You need to set the marker to draggable to listen to drag-events.");const w=t;return()=>{b.clearInstanceListeners(w)}},[t,h,u,p,m,g]),i.useEffect(()=>{t&&(A!==void 0&&(t.position=A),h!==void 0&&(t.gmpDraggable=h),f!==void 0&&(t.collisionBehavior=f),C!==void 0&&(t.zIndex=C),typeof _=="string"&&(t.title=_))},[t,A,h,f,C,_]),[t,a]}i.forwardRef((e,n)=>{const{children:t}=e,[r,a]=le(e);return i.useImperativeHandle(n,()=>r,[r]),r?v.createElement(se.Provider,{value:{marker:r}},a!==null&&N.createPortal(t,a)):null});const ce=["onClick","onDrag","onDragStart","onDragEnd","onMouseOver","onMouseOut"];function ue(e){var n;const[t,r]=i.useState(null),a=(n=i.useContext(k))==null?void 0:n.map,{onClick:o,onDrag:s,onDragStart:l,onDragEnd:d,onMouseOver:c,onMouseOut:u}=e,m=E(e,ce),{position:p,draggable:g}=m;return i.useEffect(()=>{if(!a){a===void 0&&console.error("<Marker> has to be inside a Map component.");return}const f=new google.maps.Marker(m);return f.setMap(a),r(f),()=>{f.setMap(null),r(null)}},[a]),i.useEffect(()=>{if(!t)return;const f=t,h=google.maps.event;return o&&h.addListener(f,"click",o),s&&h.addListener(f,"drag",s),l&&h.addListener(f,"dragstart",l),d&&h.addListener(f,"dragend",d),c&&h.addListener(f,"mouseover",c),u&&h.addListener(f,"mouseout",u),t.setDraggable(!!g),()=>{h.clearInstanceListeners(f)}},[t,g,o,s,l,d,c,u]),i.useEffect(()=>{t&&m&&t.setOptions(m)},[t,m]),i.useEffect(()=>{g||!p||!t||t.setPosition(p)},[g,p,t]),t}i.forwardRef((e,n)=>{const t=ue(e);return i.useImperativeHandle(n,()=>t,[t]),v.createElement(v.Fragment,null)});export{ge as A,re as M};
